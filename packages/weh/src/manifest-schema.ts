// Generated by ts-to-zod
import { z } from 'zod';

export const networkManifestSchema = z.object({
  allow: z
    .object({
      hosts: z.array(z.string()).optional(),
      httpMethods: z.array(z.string()).optional(),
    })
    .optional(),
});

export const authorManifestSchema = z.object({
  name: z.string(),
  avatar: z.string().optional(),
  email: z.string(),
  additional: z.string(),
});

export const updateManifestSchema = z.object({
  mode: z.union([z.literal('npm'), z.literal('github')]),
  registry: z.string(),
});

export const dependenciesManifestSchema = z.object({
  allow: z
    .object({
      packages: z.array(z.string()).optional(),
      extensions: z.array(z.string()).optional(),
    })
    .optional(),
});

export const fsManifestSchema = z.object({
  allow: z.array(z.string()).optional(),
});

const permissionsManifestSchema = z.any();

export const manifestSchema = z.record(z.unknown()).and(
  z.object({
    headlessMain: z.string().optional(),
    graphicalMain: z.string().optional(),
    permissions: permissionsManifestSchema.optional(),
    name: z.string(),
    icon: z.string().optional(),
    displayName: z.string().optional(),
    version: z.string(),
    manifestVersion: z.number(),
    author: authorManifestSchema,
    homepage: z.string().optional(),
    packageName: z.string(),
    description: z.string().optional(),
    update: updateManifestSchema,
    locates: z.array(z.string()).optional(),
    fs: fsManifestSchema.optional(),
    network: networkManifestSchema.optional(),
  }),
);
